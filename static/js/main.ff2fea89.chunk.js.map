{"version":3,"sources":["Sidebar.js","Projection.js","About.js","Content.js","Imprint.js","Privacy.js","Layout.js","Data.js","App.js","serviceWorker.js","index.js"],"names":["GenerateTable","label","description_stack","color_array_stack","description_array","Array","push","i","description","length","ranges","clustercount","table","document","createElement","border","columnCount","row","insertRow","headerCell","innerHTML","appendChild","j","cell","insertCell","bg_image_text","style","backgroundColor","j_in","backgroundImage","rows","cells","width","dvTable","getElementById","Sidebar","_Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","value","props","setSidebarCanvas","side_canvas","handleSelectAlgorithm","bind","handleSelectLabel","label_choice","e","v","target","selectAlgorithm","selectLabel","label_options","indexOf","_this","_this$props","sidebar_orientation","sidebar_image_size_width","sidebar_image_size_height","grem","p","hover_index","label_stack","algorithm_options","algorithm_choice","React","display","flexDirection","justifyContent","flexGrow","padding","alignItems","onChange","map","option","index","ref","height","background","concat","join","color","transition","id","onClick","toggleAbout","toggleImprint","togglePrivacy","Component","tile_string","Projection","call","handleResize","camera","aspect","updateProjectionMatrix","renderer","setSize","current_scale","getScaleFromZ","position","z","d3_x","x","d3_y","y","resize_transform","d3","translate","scale","view","mount","d3_zoom","transform","state","init","_assertThisInitialized","addPoints","setUpCamera","animate","getZFromScale","changeEmbeddings","changeLabels","tile_locations","_toConsumableArray","sprite_number","n","process","_images","src","img","scale1","domain","range","zoom_min","zoom_mid","clamp","scale2","zoom_max","prev_choice","new_choice","_this2","start","sprite_size","end","embedding_chunks","embedding_stack","slice","_loop","echunk","c","points","scene","children","numVertices","geometry","attributes","array","Float32Array","l","tween","TWEEN","to","easing","Linear","None","onUpdate","THREE","needsUpdate","computeBoundingSphere","_this3","color_array","label_chunks","_loop2","lchunk","color_o","colors","rvFOV","degToRad","fov","Math","tan","camera_z_position","fov_height","_this4","d3_transform","k","set","input","new_size","point_group","material","uniforms","size","camera_z_start","embeddings","vFOV","xs","min_x","_","max_x","ys","min_y","max_y","max_x_from_center","m","abs","max_y_from_center","far","max","scaleExtent","on","zoomHandler","initial_scale","initial_transform","_this$props2","labels","loader","textures","t","load","flipY","magFilter","vertices","embedding","vert","positions","offsets","addAttribute","texture_subsize_x","sprite_side_x","texture_subsize_y","sprite_side_y","sprite_image_width","sprite_actual_size","floor","sprite_image_height","point_size","texture","repeat","fragment_shader","colored_images","vertexShader","fragmentShader","point_cloud","userData","sprite_index","add","hover_container","hoover_size","transparent","point","frustumCulled","visible","digit_index","full_index","copyVector3sArray","offset","highlight_container","highlights","remove","mouse_position","_this$props3","sidebar_ctx","mouse_vector","_ref","_ref2","_slicedToArray","mouseX","mouseY","mouseToThree","raycaster","setFromCamera","params","Points","threshold","intersects","intersectObjects","intersect","sortIntersectsByDistanceToRay","object","setHoverIndex","highlightPoint","fillRect","drawImage","_this5","domElement","_d3$mouse","node","_d3$mouse2","checkIntersects","_this$props4","setClearColor","addBlankHighlightPoints","handleMouse","requestAnimationFrame","render","prevProps","_this$props5","removeChild","_this6","_this$props6","overflow","About","left","top","right","bottom","paddingTop","overflowY","fontSize","lineHeight","className","textAlign","cursor","textDecoration","maxWidth","margin","Markdown","Imprint","Privacy","tb","lr","Layout","ww","wh","sidebar_height","show_about","show_imprint","show_privacy","color_description_choice","checkHash","selectColorDescription","setState","window","innerWidth","innerHeight","sidebar_mount","offsetHeight","imageSmoothingEnabled","canvas","ctx","getContext","history","pushState","location","pathname","hash","addEventListener","removeEventListener","sprite_side","sprite_image_size","sprite_ratio","_this$state","sidebar_style","main_style","font_size","_objectSpread","scaler","general_style","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_loadParams","_asyncToGenerator","_callee","jsondata","object_return","_context","fetch","res","json","temp","embedding_names","label_names","embedding_number","label_number","Data","loadParams","object_return_val","response","scaled_embeddings","scaleEmbeddings","embedding_stack_local","algorithm_options_local","String","label_stack_local","_i","color_array_stack_local","_loop3","_i2","description_stack_local","label_options_local","_loop4","_i3","console","log","App","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff2fea89.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Parser from 'html-react-parser';\r\nfunction GenerateTable(label, description_stack, color_array_stack) {\r\n  //Build an array containing Customer records.\r\n  var description_array = new Array();\r\n  description_array.push([\"Range\", \"Description\", \"Cluster Count\"]);\r\n  for (var i = 0; i < description_stack[label].description.length; i++) {\r\n    description_array.push([description_stack[label].ranges[i][0] + ':' + description_stack[label].ranges[i][1],\r\n                            description_stack[label].description[i],\r\n                            description_stack[label].clustercount[i]]);\r\n  }\r\n\r\n  //Create a HTML Table element.\r\n  var table = document.createElement(\"TABLE\");\r\n  table.border = \"1\";\r\n  \r\n\r\n  //Get the count of columns.\r\n  var columnCount = description_array[0].length;\r\n\r\n  //Add the header row.\r\n  var row = table.insertRow(-1);\r\n  for (var i = 0; i < columnCount; i++) {\r\n      var headerCell = document.createElement(\"TH\");\r\n      headerCell.innerHTML = description_array[0][i];\r\n      row.appendChild(headerCell);\r\n  }\r\n\r\n  //Add the data rows.\r\n  for (var i = 1; i < description_array.length; i++) {\r\n      row = table.insertRow(-1);\r\n      for (var j = 0; j < columnCount; j++) {\r\n          var cell = row.insertCell(-1);\r\n          cell.innerHTML = description_array[i][j];\r\n          if (j==0){\r\n            \r\n            if (description_stack[label].ranges[i-1][0]==description_stack[label].ranges[i-1][1]){\r\n              bg_image_text = 'rgba('+color_array_stack[label][description_stack[label].ranges[i-1][0]]+')';\r\n              cell.style.backgroundColor = bg_image_text;\r\n            }\r\n            else{\r\n              var bg_image_text = 'linear-gradient(to right';\r\n              for (var j_in = description_stack[label].ranges[i-1][0]; j_in <= description_stack[label].ranges[i-1][1]; j_in++) {\r\n                bg_image_text = bg_image_text +', rgba('+color_array_stack[label][j_in]+')';\r\n              }\r\n              bg_image_text = bg_image_text+')';\r\n              cell.style.backgroundImage = bg_image_text;\r\n            }\r\n            \r\n            \r\n          }\r\n      }\r\n  }\r\n  table.rows[0].cells[0].width= '100px';\r\n  var dvTable = document.getElementById(\"dvTable\");\r\n  dvTable.innerHTML = \"\";\r\n  dvTable.appendChild(table);\r\n}\r\n\r\nclass Sidebar extends Component {\r\n  componentDidMount() {\r\n    this.props.setSidebarCanvas(this.side_canvas)\r\n    this.handleSelectAlgorithm = this.handleSelectAlgorithm.bind(this)\r\n    this.handleSelectLabel = this.handleSelectLabel.bind(this)\r\n    GenerateTable(this.props.label_choice, this.props.description_stack, this.props.color_array_stack)\r\n  }\r\n\r\n  handleSelectAlgorithm(e) {\r\n    let v = e.target.value\r\n    this.props.selectAlgorithm(v)\r\n  }\r\n\r\n  handleSelectLabel(e) {\r\n    let v = e.target.value\r\n    this.props.selectLabel(v)\r\n    let i = this.props.label_options.indexOf(v)\r\n    GenerateTable(i,this.props.description_stack,this.props.color_array_stack)\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      sidebar_orientation,\r\n      sidebar_image_size_width,\r\n      sidebar_image_size_height,\r\n      grem,\r\n      p,\r\n      hover_index,\r\n      label_stack,\r\n      color_array_stack,\r\n      description_stack,\r\n      algorithm_options,\r\n      algorithm_choice,\r\n      label_options,\r\n      label_choice,\r\n    } = this.props\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'space-between',\r\n          flexGrow: 1,\r\n        }}\r\n      >\r\n        <div>\r\n          {' '}\r\n          <div\r\n            style={{\r\n              padding: grem / 2,\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <div>Representation:</div>\r\n            <select\r\n              onChange={this.handleSelectAlgorithm}\r\n              value={algorithm_options[algorithm_choice]}\r\n            >\r\n              {algorithm_options.map((option, index) => (\r\n                <option key={option} value={option}>\r\n                  {option}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div\r\n            style={{\r\n              padding: grem / 2,\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <div>Label:</div>\r\n            <select\r\n              onChange={this.handleSelectLabel}\r\n              value={label_options[label_choice]}\r\n            >\r\n              {label_options.map((option, index) => (\r\n                <option key={option} value={option}>\r\n                  {option}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection:\r\n                sidebar_orientation === 'horizontal' ? 'row' : 'column',\r\n            }}\r\n          >\r\n            <div>\r\n              <canvas\r\n                ref={side_canvas => {\r\n                  this.side_canvas = side_canvas\r\n                }}\r\n                width={sidebar_image_size_width}\r\n                height={sidebar_image_size_height}\r\n              />\r\n            </div>\r\n            <div style={{ flexGrow: 1 }}>\r\n              <div\r\n                style={{\r\n                  background: hover_index\r\n                    ? `rgb(${color_array_stack[label_choice][label_stack[label_choice][hover_index]].join(',')})`\r\n                    : 'transparent',\r\n                  color: hover_index ? '#000' : '#fff',\r\n                  padding: p(grem / 4, grem / 2),\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  transition: 'all 0.1s linear',\r\n                }}\r\n              >\r\n                <div>Label:</div>\r\n                {hover_index ? <div>{label_stack[label_choice][hover_index]}</div> : null}\r\n              </div>\r\n              <div\r\n                style={{\r\n                  padding: p(grem / 4, grem / 2),\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                }}\r\n              >\r\n                Index:\r\n                {hover_index ? <div>{hover_index}</div> : null}\r\n              </div>\r\n              <div id=\"dvTable\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ padding: grem / 2 }}>\r\n          <div>\r\n          An interactive latent space visualization of the temporal evolvement of sensor-difference signal (red=difference in x-position, green=difference in y-position).{' '}\r\n            <button\r\n              onClick={() => {\r\n                this.props.toggleAbout(true)\r\n              }}\r\n            >\r\n              About\r\n            </button>\r\n          </div>\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                this.props.toggleImprint(true)\r\n              }}\r\n            >\r\n              Impressum\r\n            </button>\r\n          </div>\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                this.props.togglePrivacy(true)\r\n              }}\r\n            >\r\n              Datenschutzerklärung\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { Component } from 'react'\r\nimport * as THREE from 'three'\r\nimport * as _ from 'lodash'\r\nimport * as d3 from 'd3'\r\nimport * as TWEEN from '@tweenjs/tween.js'\r\n\r\nlet tile_string = 'tile_image_'\r\n\r\nclass Projection extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n    this.init = this.init.bind(this)\r\n    this.addPoints = this.addPoints.bind(this)\r\n    this.handleResize = this.handleResize.bind(this)\r\n    this.setUpCamera = this.setUpCamera.bind(this)\r\n    this.animate = this.animate.bind(this)\r\n    this.getScaleFromZ = this.getScaleFromZ.bind(this)\r\n    this.getZFromScale = this.getZFromScale.bind(this)\r\n    this.changeEmbeddings = this.changeEmbeddings.bind(this)\r\n    this.changeLabels = this.changeLabels.bind(this)\r\n    this.tile_locations = [...Array(this.props.sprite_number)].map(\r\n      (n, i) => `${process.env.PUBLIC_URL}/${tile_string}${i}.png`\r\n    )\r\n    this._images = this.tile_locations.map(src => {\r\n      let img = document.createElement('img')\r\n      img.src = src\r\n      return img\r\n    })\r\n    this.scale1 = d3\r\n      .scaleLinear()\r\n      .domain([20, 3])\r\n      .range([this.props.zoom_min, this.props.zoom_mid])\r\n      .clamp(true)\r\n    this.scale2 = d3\r\n      .scaleLinear()\r\n      .domain([3, 0])\r\n      .range([this.props.zoom_mid, this.props.zoom_max])\r\n  }\r\n\r\n  changeEmbeddings(prev_choice, new_choice) {\r\n    // assumes mnist embeddings has been updated\r\n    let ranges = []\r\n    for (let i = 0; i < this.props.sprite_number; i++) {\r\n      let start = i * this.props.sprite_size\r\n      let end = (i + 1) * this.props.sprite_size\r\n      if (i === this.props.sprite_number - 1) end = this.props.sprite_number * this.props.sprite_size\r\n      ranges.push([start, end])\r\n    }\r\n\r\n    let embedding_chunks = ranges.map(range =>\r\n      this.props.embedding_stack[new_choice].slice(\r\n        range[0],\r\n        range[1]\r\n      )\r\n    )\r\n\r\n    for (let c = 0; c < this.props.sprite_number; c++) {\r\n      let echunk = embedding_chunks[c]\r\n\r\n      let points = this.scene.children[0].children[c]\r\n      let numVertices = echunk.length\r\n      let position = points.geometry.attributes.position.array\r\n      let target = new Float32Array(numVertices * 3)\r\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 3) {\r\n        let x = echunk[i][0]\r\n        let y = echunk[i][1]\r\n        let z = 0\r\n        target[index] = x\r\n        target[index + 1] = y\r\n        target[index + 2] = z\r\n      }\r\n\r\n\r\n      let tween = new TWEEN.Tween(position)\r\n        .to(target, 1000)\r\n        .easing(TWEEN.Easing.Linear.None)\r\n      tween.onUpdate(function() {\r\n        points.geometry.attributes.position = new THREE.BufferAttribute(\r\n          position,\r\n          3\r\n        )\r\n        points.geometry.attributes.position.needsUpdate = true // required after the first render\r\n        points.geometry.computeBoundingSphere()\r\n      })\r\n      tween.start()\r\n    }\r\n\r\n  }\r\n\r\n  changeLabels(new_choice) {\r\n    // assumes mnist embeddings has been updated\r\n    let color_array = this.props.color_array_stack[new_choice]\r\n    let ranges = []\r\n    for (let i = 0; i < this.props.sprite_number; i++) {\r\n      let start = i * this.props.sprite_size\r\n      let end = (i + 1) * this.props.sprite_size\r\n      if (i === this.props.sprite_number - 1) end = this.props.sprite_number * this.props.sprite_size\r\n      ranges.push([start, end])\r\n    }\r\n\r\n    let label_chunks = ranges.map(range =>\r\n      this.props.label_stack[new_choice].slice(\r\n        range[0],\r\n        range[1]\r\n      )\r\n    )\r\n\r\n    for (let c = 0; c < this.props.sprite_number; c++) {\r\n      let points = this.scene.children[0].children[c]\r\n      let lchunk = label_chunks[c]\r\n      let numVertices = lchunk.length\r\n      let color_o = points.geometry.attributes.color.array\r\n      let colors = new Float32Array(numVertices * 3)\r\n\r\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 3) {\r\n        let color = color_array[lchunk[i]]\r\n        colors[index] = color[0] / 255\r\n        colors[index + 1] = color[1] / 255\r\n        colors[index + 2] = color[2] / 255\r\n      }\r\n\r\n      let tween = new TWEEN.Tween(color_o)\r\n        .to(colors, 1000)\r\n        .easing(TWEEN.Easing.Linear.None)\r\n      tween.onUpdate(function() {\r\n        points.geometry.attributes.color = new THREE.BufferAttribute(color_o, 3)\r\n        points.geometry.attributes.color.needsUpdate = true // required after the first render\r\n        points.geometry.computeBoundingSphere()\r\n      })\r\n      tween.start()\r\n    }\r\n  }\r\n\r\n  getZFromScale(scale) {\r\n    let rvFOV = THREE.Math.degToRad(this.camera.fov)\r\n    let scale_height = this.props.height / scale\r\n    let camera_z_position = scale_height / (2 * Math.tan(rvFOV / 2))\r\n    return camera_z_position\r\n  }\r\n\r\n  getScaleFromZ(camera_z_position) {\r\n    let rvFOV = THREE.Math.degToRad(this.camera.fov)\r\n    let half_fov_height = Math.tan(rvFOV / 2) * camera_z_position\r\n    let fov_height = half_fov_height * 2\r\n    let scale = this.props.height / fov_height\r\n    return scale\r\n  }\r\n\r\n  handleResize = (width, height) => {\r\n    this.camera.aspect = width / height\r\n    this.camera.updateProjectionMatrix()\r\n    this.renderer.setSize(width, height)\r\n    let current_scale = this.getScaleFromZ(this.camera.position.z)\r\n    let d3_x = -(this.camera.position.x * current_scale) + this.props.width / 2\r\n    let d3_y = this.camera.position.y * current_scale + this.props.height / 2\r\n    var resize_transform = d3.zoomIdentity\r\n      .translate(d3_x, d3_y)\r\n      .scale(current_scale)\r\n    let view = d3.select(this.mount)\r\n    this.d3_zoom.transform(view, resize_transform)\r\n  }\r\n\r\n  zoomHandler() {\r\n    let d3_transform = d3.event.transform\r\n\r\n    let scale = d3_transform.k\r\n    let x = -(d3_transform.x - this.props.width / 2) / scale\r\n    let y = (d3_transform.y - this.props.height / 2) / scale\r\n    let z = this.getZFromScale(scale)\r\n\r\n    this.camera.position.set(x, y, z)\r\n\r\n    // point size scales at end of zoom\r\n\r\n    let zoomScaler = input => {\r\n      if (input >= 3) {\r\n        return this.scale1(input)\r\n      } else  {\r\n        return this.scale2(input)\r\n      }\r\n    }\r\n    let new_size = zoomScaler(z)\r\n    let point_group = this.scene.children[0].children\r\n    for (let c = 0; c < point_group.length; c++) {\r\n      point_group[c].material.uniforms.size.value = new_size\r\n    }\r\n  }\r\n\r\n  setUpCamera() {\r\n    let { width, height, embeddings } = this.props\r\n\r\n    let aspect = this.camera.aspect\r\n    let vFOV = this.camera.fov\r\n    let rvFOV = THREE.Math.degToRad(vFOV)\r\n\r\n    let xs = embeddings.map(e => e[0])\r\n    let min_x = _.min(xs)\r\n    let max_x = _.max(xs)\r\n    let ys = embeddings.map(e => e[1])\r\n    let min_y = _.min(ys)\r\n    let max_y = _.max(ys)\r\n    let data_width = max_x - min_x\r\n    let data_height = max_y - min_y\r\n    let data_aspect = data_width / data_height\r\n\r\n    let max_x_from_center = _.max([min_x, max_x].map(m => Math.abs(m)))\r\n    let max_y_from_center = _.max([min_y, max_y].map(m => Math.abs(m)))\r\n\r\n    let max_center = Math.max(max_x_from_center, max_y_from_center)\r\n\r\n    let camera_z_start\r\n    if (data_aspect > aspect) {\r\n      // console.log(\"width is limiter\");\r\n      // camera_z_start = max_x_from_center / Math.tan(rvFOV / 2) / aspect\r\n    } else {\r\n      // console.log(\"height is limiter\");\r\n      // camera_z_start = max_y_from_center / Math.tan(rvFOV / 2)\r\n    }\r\n\r\n    camera_z_start = max_center / Math.tan(rvFOV / 2)\r\n\r\n    let far = camera_z_start * 1.25\r\n    this.camera.far = far\r\n    this.camera.position.z = camera_z_start * 1.1\r\n\r\n    // set up zoom\r\n    this.d3_zoom = d3\r\n      .zoom()\r\n      .scaleExtent([this.getScaleFromZ(far - 1), this.getScaleFromZ(0.1)])\r\n      .on('zoom', this.zoomHandler.bind(this))\r\n\r\n    let view = d3.select(this.mount)\r\n    this.view = view\r\n    view.call(this.d3_zoom)\r\n    let initial_scale = this.getScaleFromZ(this.camera.position.z)\r\n    var initial_transform = d3.zoomIdentity\r\n      .translate(width / 2, height / 2)\r\n      .scale(initial_scale)\r\n    this.d3_zoom.transform(view, initial_transform)\r\n  }\r\n\r\n  addPoints() {\r\n    let { embeddings, labels, color_array } = this.props\r\n    \r\n\r\n    // split embeddings and labels into chunks to match sprites\r\n    let ranges = []\r\n    for (let i = 0; i < this.props.sprite_number; i++) {\r\n      let start = i * this.props.sprite_size\r\n      let end = (i + 1) * this.props.sprite_size\r\n      if (i === this.props.sprite_number - 1) end = this.props.sprite_number * this.props.sprite_size\r\n      ranges.push([start, end])\r\n    }\r\n    let embedding_chunks = ranges.map(range =>\r\n      embeddings.slice(range[0], range[1])\r\n    )\r\n    let label_chunks = ranges.map(range =>\r\n      labels.slice(range[0], range[1])\r\n    )\r\n\r\n    // load the textures\r\n    let loader = new THREE.TextureLoader()\r\n    this.textures = this.tile_locations.map(l => {\r\n      let t = loader.load(l)\r\n      t.flipY = false\r\n      t.magFilter = THREE.NearestFilter\r\n      // t.minFilter = THREE.LinearMipMapLinearFilter;\r\n      return t\r\n    })\r\n\r\n    let point_group = new THREE.Group()\r\n    for (let c = 0; c < this.props.sprite_number; c++) {\r\n      let echunk = embedding_chunks[c]\r\n      let lchunk = label_chunks[c]\r\n\r\n      let vertices = []\r\n      for (let v = 0; v < echunk.length; v++) {\r\n        let embedding = echunk[v]\r\n        let vert = new THREE.Vector3(embedding[0], embedding[1], 0)\r\n        vertices[v] = vert\r\n      }\r\n\r\n      let geometry = new THREE.BufferGeometry()\r\n\r\n      let numVertices = vertices.length\r\n      let positions = new Float32Array(numVertices * 3)\r\n      let offsets = new Float32Array(numVertices * 2)\r\n      let colors = new Float32Array(numVertices * 3)\r\n      geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3))\r\n      geometry.addAttribute('offset', new THREE.BufferAttribute(offsets, 2))\r\n      geometry.addAttribute('color', new THREE.BufferAttribute(colors, 3))\r\n\r\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 3) {\r\n        let x = echunk[i][0]\r\n        let y = echunk[i][1]\r\n        let z = 0\r\n        positions[index] = x\r\n        positions[index + 1] = y\r\n        positions[index + 2] = z\r\n      }\r\n\r\n      // geometry.attributes.position.copyVector3sArray(vertices)\r\n\r\n      let texture_subsize_x = 1 / this.props.sprite_side_x\r\n      let texture_subsize_y = 1 / this.props.sprite_side_y\r\n\r\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 2) {\r\n        let x = ((i % this.props.sprite_side_x) * this.props.sprite_image_width) / this.props.sprite_actual_size\r\n        let y =\r\n          (Math.floor(i / this.props.sprite_side_x) * this.props.sprite_image_height) / this.props.sprite_actual_size\r\n        offsets[index] = x\r\n        offsets[index + 1] = y\r\n      }\r\n\r\n      \r\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 3) {\r\n        let color = color_array[lchunk[i]]\r\n        colors[index] = color[0] / 255\r\n        colors[index + 1] = color[1] / 255\r\n        colors[index + 2] = color[2] / 255\r\n      }\r\n      let point_size = Math.max(this.props.sprite_image_width,this.props.sprite_image_height)\r\n      // uniforms\r\n      let uniforms = {\r\n        texture: { value: this.textures[c] },\r\n        repeat: { value: new THREE.Vector2(texture_subsize_x, texture_subsize_y) },\r\n        size: { value:  point_size},\r\n        height: {value: this.props.sprite_image_height},\r\n        width: {value: this.props.sprite_image_width},\r\n      }\r\n\r\n      let vertex_shader = `\r\n        attribute vec2 offset;\r\n        varying vec2 vOffset;\r\n        attribute vec3 color;\r\n        varying vec3 vColor;\r\n        uniform float size;\r\n        void main() {\r\n          vOffset = offset;\r\n          vColor = color;\r\n          gl_PointSize = size;\r\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n        }`\r\n      let fragment_shader\r\n      if (this.props.colored_images == 0){\r\n        fragment_shader = `\r\n          uniform sampler2D texture;\r\n          uniform vec2 repeat;\r\n          uniform float height;\r\n          uniform float width;\r\n          varying vec2 vOffset;\r\n          varying vec3 vColor;\r\n          void main() {\r\n            if (width>height){\r\n              float height_rel = height/width;\r\n              float start_rel = (width-height)/(2.0*width);\r\n              float end_rel = start_rel+height_rel;\r\n              if (gl_PointCoord.y>=start_rel && gl_PointCoord.y<=end_rel) {\r\n                float y_new = ((gl_PointCoord.y-start_rel)/height_rel);\r\n                vec2 uv = vec2( gl_PointCoord.x, y_new );\r\n                vec4 tex = texture2D( texture, uv * repeat + vOffset );\r\n                if ( tex.r < 0.05 ) discard;\r\n                tex.r = 1.0;\r\n                tex.g = 1.0;\r\n                tex.b = 1.0;\r\n                gl_FragColor = tex * vec4(vColor, 1.0);\r\n              } else {\r\n                discard;\r\n              }\r\n            } else if (width<height) {\r\n              float width_rel = width/height;\r\n              float start_rel = (height-width)/(2.0*height);\r\n              float end_rel = start_rel+width_rel;\r\n              if (gl_PointCoord.x>=start_rel && gl_PointCoord.x<=end_rel) {\r\n                float x_new = ((gl_PointCoord.x-start_rel)/width_rel);\r\n                vec2 uv = vec2( x_new,gl_PointCoord.y );\r\n                vec4 tex = texture2D( texture, uv * repeat + vOffset );\r\n                if ( tex.r < 0.05 ) discard;\r\n                tex.r = 1.0;\r\n                tex.g = 1.0;\r\n                tex.b = 1.0;\r\n                gl_FragColor = tex * vec4(vColor, 1.0);\r\n              } else {\r\n                discard;\r\n              }\r\n            } else {\r\n              vec2 uv = vec2( gl_PointCoord.x, gl_PointCoord.y );\r\n              vec4 tex = texture2D( texture, uv * repeat + vOffset );\r\n              if ( tex.r < 0.5) discard;\r\n              tex.r = 1.0;\r\n              tex.g = 1.0;\r\n              tex.b = 1.0;\r\n              gl_FragColor = tex * vec4(vColor, 1.0); \r\n            }\r\n          }`\r\n      } else if (this.props.colored_images == -1) {\r\n        // Use labels or the clustering result to color the embeddings \r\n        // However the zoom window of a single embedding still displays the object pair lidar=red, camera=green, and both=yellow\r\n        fragment_shader = `\r\n          uniform sampler2D texture;\r\n          uniform vec2 repeat;\r\n          uniform float height;\r\n          uniform float width;\r\n          varying vec2 vOffset;\r\n          varying vec3 vColor;\r\n          void main() {\r\n            if (width>height){\r\n              float height_rel = height/width;\r\n              float start_rel = (width-height)/(2.0*width);\r\n              float end_rel = start_rel+height_rel;\r\n              if (gl_PointCoord.y>=start_rel && gl_PointCoord.y<=end_rel) {\r\n                float y_new = ((gl_PointCoord.y-start_rel)/height_rel);\r\n                vec2 uv = vec2( gl_PointCoord.x, y_new );\r\n                vec4 tex = texture2D( texture, uv * repeat + vOffset );\r\n                // THIS Part covers the colors\r\n                if (tex.r < 0.05 && tex.g < 0.05 && tex.b < 0.05) discard;\r\n                tex.r = 1.0;\r\n                tex.g = 1.0;\r\n                tex.b = 1.0;\r\n                gl_FragColor = tex * vec4(vColor, 1.0);\r\n              } else {\r\n                discard;\r\n              }\r\n            } else if (width<height) {\r\n              float width_rel = width/height;\r\n              float start_rel = (height-width)/(2.0*height);\r\n              float end_rel = start_rel+width_rel;\r\n              if (gl_PointCoord.x>=start_rel && gl_PointCoord.x<=end_rel) {\r\n                float x_new = ((gl_PointCoord.x-start_rel)/width_rel);\r\n                vec2 uv = vec2( x_new,gl_PointCoord.y );\r\n                vec4 tex = texture2D( texture, uv * repeat + vOffset );\r\n                if ( tex.r < 0.05 ) discard;\r\n                // tex.r = 1.0;\r\n                // tex.g = 1.0;\r\n                // tex.b = 1.0;\r\n                // gl_FragColor = tex * vec4(vColor, 1.0);\r\n              } else {\r\n                discard;\r\n              }\r\n            } else {\r\n              vec2 uv = vec2( gl_PointCoord.x, gl_PointCoord.y );\r\n              vec4 tex = texture2D( texture, uv * repeat + vOffset );\r\n              if ( tex.b < 0.5 && tex.r==0.0 && tex.g==0.0) discard;\r\n              if (tex.r>0.0 && tex.g>0.0 && tex.b>0.0) discard;\r\n\r\n              tex.r = 1.0;\r\n              tex.g = 1.0;\r\n              tex.b = 1.0;\r\n              gl_FragColor = tex * vec4(vColor, 1.0); \r\n\r\n              // if (tex.r>0.0){\r\n              //   tex.r = 1.0;\r\n              //   tex.g = 1.0;\r\n              //   tex.b = 1.0;\r\n              //   gl_FragColor = tex * vec4(vColor, 1.0); \r\n              // }\r\n              // else{\r\n              //   tex.r = 1.0;\r\n              //   tex.g = 1.0;\r\n              //   tex.b = 1.0;\r\n              //   gl_FragColor = tex * vec4(vColor, 1.0); \r\n              // }\r\n            }\r\n          }`\r\n      } else if (this.props.colored_images == 2) {\r\n        // The embeddings are colored in the fashion that lidar=red, camera=green, and both=yellow (labels don't color the images here)\r\n        fragment_shader = `\r\n          uniform sampler2D texture;\r\n          uniform vec2 repeat;\r\n          uniform float height;\r\n          uniform float width;\r\n          varying vec2 vOffset;\r\n          varying vec3 vColor;\r\n          void main() {\r\n            if (width>height){\r\n              float height_rel = height/width;\r\n              float start_rel = (width-height)/(2.0*width);\r\n              float end_rel = start_rel+height_rel;\r\n              if (gl_PointCoord.y>=start_rel && gl_PointCoord.y<=end_rel) {\r\n                // THIS is the relevant part to change the color scheme\r\n                float y_new = ((gl_PointCoord.y-start_rel)/height_rel);\r\n                vec2 uv = vec2( gl_PointCoord.x, y_new );\r\n                vec4 tex = texture2D( texture, uv * repeat + vOffset );\r\n                // if ( tex.r < 0.05 ) discard;\r\n                if ( tex.b==0.0 && tex.r==0.0 && tex.g==.0) discard;\r\n                // tex.r = 1.0;\r\n                // tex.g = 1.0;\r\n                // tex.b = 1.0;\r\n                // gl_FragColor = tex * vec4(vColor, 1.0);\r\n                gl_FragColor = tex;\r\n              } else {\r\n                discard;\r\n              }\r\n            } else if (width<height) {\r\n              float width_rel = width/height;\r\n              float start_rel = (height-width)/(2.0*height);\r\n              float end_rel = start_rel+width_rel;\r\n              if (gl_PointCoord.x>=start_rel && gl_PointCoord.x<=end_rel) {\r\n                float x_new = ((gl_PointCoord.x-start_rel)/width_rel);\r\n                vec2 uv = vec2( x_new,gl_PointCoord.y );\r\n                vec4 tex = texture2D( texture, uv * repeat + vOffset );\r\n                if ( tex.r < 0.05 && tex.g < 0.05 && tex.b < 0.05 ) discard;\r\n                tex.r = 1.0;\r\n                tex.g = 1.0;\r\n                tex.b = 1.0;\r\n                gl_FragColor = tex * vec4(vColor, 1.0);\r\n              } else {\r\n                discard;\r\n              }\r\n            } else {\r\n              vec2 uv = vec2( gl_PointCoord.x, gl_PointCoord.y );\r\n              vec4 tex = texture2D( texture, uv * repeat + vOffset );\r\n              if (tex.b < 0.5 && tex.r==0.0 && tex.g==0.0 && tex.b==0.0) discard;\r\n              if (tex.r>0.0){\r\n                tex.r = tex.r;\r\n                tex.g = tex.g;\r\n                tex.b = 0.0;\r\n                gl_FragColor = tex; \r\n              }\r\n              else{\r\n                tex.r = 1.0;\r\n                tex.g = 1.0;\r\n                tex.b = 1.0;\r\n                gl_FragColor = tex * vec4(vColor, 1.0); \r\n              }\r\n            }\r\n          }`\r\n      } else {\r\n        fragment_shader = `\r\n        uniform sampler2D texture;\r\n        uniform vec2 repeat;\r\n        uniform float height;\r\n        uniform float width;\r\n        varying vec2 vOffset;\r\n        varying vec3 vColor;\r\n        void main() {\r\n          if (width>height){\r\n            float height_rel = height/width;\r\n            float start_rel = (width-height)/(2.0*width);\r\n            float end_rel = start_rel+height_rel;\r\n            if (gl_PointCoord.y>=start_rel && gl_PointCoord.y<=end_rel) {\r\n              float y_new = ((gl_PointCoord.y-start_rel)/height_rel);\r\n              vec2 uv = vec2( gl_PointCoord.x, y_new );\r\n              vec4 tex = texture2D( texture, uv * repeat + vOffset );\r\n              gl_FragColor = tex;\r\n            } else {\r\n              discard;\r\n            }\r\n          } else if (width<height) {\r\n            float width_rel = width/height;\r\n            float start_rel = (height-width)/(2.0*height);\r\n            float end_rel = start_rel+width_rel;\r\n            if (gl_PointCoord.x>=start_rel && gl_PointCoord.x<=end_rel) {\r\n              float x_new = ((gl_PointCoord.x-start_rel)/width_rel);\r\n              vec2 uv = vec2( x_new, gl_PointCoord.y );\r\n              vec4 tex = texture2D( texture, uv * repeat + vOffset );\r\n              gl_FragColor = tex;\r\n            } else {\r\n              discard;\r\n            }\r\n          } else {\r\n            vec2 uv = vec2( gl_PointCoord.x, gl_PointCoord.y );\r\n            vec4 tex = texture2D( texture, uv * repeat + vOffset );\r\n            gl_FragColor = tex;\r\n          }\r\n        }`\r\n      }\r\n\r\n      // material\r\n      let material = new THREE.ShaderMaterial({\r\n        uniforms: uniforms,\r\n        vertexShader: vertex_shader,\r\n        fragmentShader: fragment_shader,\r\n      })\r\n\r\n      // point cloud\r\n      let point_cloud = new THREE.Points(geometry, material)\r\n      point_cloud.userData = { sprite_index: c }\r\n\r\n      point_group.add(point_cloud)\r\n    }\r\n\r\n    this.scene.add(point_group)\r\n  }\r\n\r\n  addBlankHighlightPoints() {\r\n    let hover_container = new THREE.Group()\r\n    this.scene.add(hover_container)\r\n\r\n    let vert = new THREE.Vector3(0, 0, 0)\r\n    let vertices = [vert]\r\n    let geometry = new THREE.BufferGeometry()\r\n    let numVertices = vertices.length\r\n    var positions = new Float32Array(numVertices * 3) // 3 coordinates per point\r\n    var offsets = new Float32Array(numVertices * 2) // 2 coordinates per point\r\n    geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3))\r\n    geometry.addAttribute('offset', new THREE.BufferAttribute(offsets, 2))\r\n\r\n    // all the attributes will be filled on hover\r\n    let texture_subsize_x = 1 / this.props.sprite_side_x\r\n    let texture_subsize_y = 1 / this.props.sprite_side_y\r\n\r\n    let point_size = this.props.hoover_size//Math.max(this.props.sprite_image_width,this.props.sprite_image_height)\r\n    // uniforms\r\n    let uniforms = {\r\n      texture: { value: this.textures[0] },\r\n      repeat: { value: new THREE.Vector2(texture_subsize_x, texture_subsize_y) },\r\n      size: { value:  point_size},\r\n      height: {value: this.props.sprite_image_height},\r\n      width: {value: this.props.sprite_image_width},\r\n    }\r\n\r\n    let vertex_shader = `\r\n        attribute vec2 offset;\r\n        varying vec2 vOffset;\r\n        uniform float size;\r\n        void main() {\r\n          vOffset = offset;\r\n          gl_PointSize = size;\r\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n        }`\r\n\r\n      let fragment_shader\r\n      if (this.props.colored_images == 0){\r\n        fragment_shader = `\r\n          uniform sampler2D texture;\r\n          uniform vec2 repeat;\r\n          uniform float height;\r\n          uniform float width;\r\n          varying vec2 vOffset;\r\n          varying vec3 vColor;\r\n          void main() {\r\n            if (width>height){\r\n              float height_rel = height/width;\r\n              float start_rel = (width-height)/(2.0*width);\r\n              float end_rel = start_rel+height_rel;\r\n              if (gl_PointCoord.y>=start_rel && gl_PointCoord.y<=end_rel) {\r\n                float y_new = ((gl_PointCoord.y-start_rel)/height_rel);\r\n                vec2 uv = vec2( gl_PointCoord.x, y_new );\r\n                vec4 tex = texture2D( texture, uv * repeat + vOffset );\r\n                tex.a = 1.0;\r\n                tex.r = 1.0;\r\n                tex.g = 1.0;\r\n                tex.b = 1.0;\r\n                gl_FragColor = tex;\r\n              } else {\r\n                discard;\r\n              }\r\n            } else if (width<height) {\r\n              float width_rel = width/height;\r\n              float start_rel = (height-width)/(2.0*height);\r\n              float end_rel = start_rel+width_rel;\r\n              if (gl_PointCoord.x>=start_rel && gl_PointCoord.x<=end_rel) {\r\n                float x_new = ((gl_PointCoord.x-start_rel)/width_rel);\r\n                vec2 uv = vec2( x_new,gl_PointCoord.y );\r\n                vec4 tex = texture2D( texture, uv * repeat + vOffset );\r\n                tex.a = tex.r;\r\n                tex.r = 1.0;\r\n                tex.g = 1.0;\r\n                tex.b = 1.0;\r\n                gl_FragColor = tex; \r\n              } else {\r\n                discard;\r\n              }\r\n            } else {\r\n              vec2 uv = vec2( gl_PointCoord.x, gl_PointCoord.y );\r\n              vec4 tex = texture2D( texture, uv * repeat + vOffset );\r\n              tex.a = tex.r;\r\n              tex.r = 1.0;\r\n              tex.g = 1.0;\r\n              tex.b = 1.0;\r\n              gl_FragColor = tex; \r\n            }\r\n          }`\r\n        \r\n      }else{\r\n        fragment_shader = `\r\n        uniform sampler2D texture;\r\n        uniform vec2 repeat;\r\n        uniform float height;\r\n        uniform float width;\r\n        varying vec2 vOffset;\r\n        varying vec3 vColor;\r\n        void main() {\r\n          if (width>height){\r\n            float height_rel = height/width;\r\n            float start_rel = (width-height)/(2.0*width);\r\n            float end_rel = start_rel+height_rel;\r\n            if (gl_PointCoord.y>=start_rel && gl_PointCoord.y<=end_rel) {\r\n              float y_new = ((gl_PointCoord.y-start_rel)/height_rel);\r\n              vec2 uv = vec2( gl_PointCoord.x, y_new );\r\n              vec4 tex = texture2D( texture, uv * repeat + vOffset );\r\n              gl_FragColor = tex;\r\n            } else {\r\n              discard;\r\n            }\r\n          } else if (width<height) {\r\n            float width_rel = width/height;\r\n            float start_rel = (height-width)/(2.0*height);\r\n            float end_rel = start_rel+width_rel;\r\n            if (gl_PointCoord.x>=start_rel && gl_PointCoord.x<=end_rel) {\r\n              float x_new = ((gl_PointCoord.x-start_rel)/width_rel);\r\n              vec2 uv = vec2( x_new, gl_PointCoord.y );\r\n              vec4 tex = texture2D( texture, uv * repeat + vOffset );\r\n              gl_FragColor = tex;\r\n            } else {\r\n              discard;\r\n            }\r\n          } else {\r\n            vec2 uv = vec2( gl_PointCoord.x, gl_PointCoord.y );\r\n            vec4 tex = texture2D( texture, uv * repeat + vOffset );\r\n            gl_FragColor = tex;\r\n          }\r\n        }`\r\n      }\r\n\r\n    // material\r\n    var material = new THREE.ShaderMaterial({\r\n      uniforms: uniforms,\r\n      vertexShader: vertex_shader,\r\n      fragmentShader: fragment_shader,\r\n      transparent: true,\r\n    })\r\n\r\n    let point = new THREE.Points(geometry, material)\r\n    point.frustumCulled = false\r\n\r\n    this.scene.children[1].visible = false\r\n    this.scene.children[1].add(point)\r\n  }\r\n\r\n\r\n  highlightPoint(sprite_index, digit_index, full_index) {\r\n    let { algorithm_choice} = this.props\r\n\r\n    let point = this.scene.children[1].children[0]\r\n\r\n    let embedding = this.props.embedding_stack.slice()[algorithm_choice][full_index]\r\n    //[full_index]\r\n\r\n    let vert = new THREE.Vector3(embedding[0], embedding[1], 0)\r\n    let vertices = [vert]\r\n\r\n    var offsets = new Float32Array(2) // 2 coordinates per point\r\n\r\n    let x = ((digit_index % this.props.sprite_side_x) * this.props.sprite_image_width) / this.props.sprite_actual_size\r\n    let y = (Math.floor(digit_index / this.props.sprite_side_x) * this.props.sprite_image_height) / this.props.sprite_actual_size\r\n    offsets[0] = x\r\n    offsets[1] = y\r\n\r\n    point.geometry.attributes.position.copyVector3sArray(vertices)\r\n    point.geometry.attributes.position.needsUpdate = true // required after the first render\r\n    point.geometry.attributes.offset.array = offsets\r\n    point.geometry.attributes.offset.needsUpdate = true // required after the first render\r\n\r\n    // need to set attributes on geometry and uniforms on material\r\n    point.material.uniforms.texture.value = this.textures[sprite_index]\r\n  }\r\n\r\n  removeHighlights() {\r\n    let highlight_container = this.scene.children[1]\r\n    let highlights = highlight_container.children\r\n    highlight_container.remove(...highlights)\r\n  }\r\n\r\n  checkIntersects(mouse_position) {\r\n    let { width, height, sidebar_ctx, sidebar_image_size_width, sidebar_image_size_height } = this.props\r\n\r\n    function mouseToThree([mouseX, mouseY]) {\r\n      return new THREE.Vector3(\r\n        (mouseX / width) * 2 - 1,\r\n        -(mouseY / height) * 2 + 1,\r\n        1\r\n      )\r\n    }\r\n\r\n    function sortIntersectsByDistanceToRay(intersects) {\r\n      return _.sortBy(intersects, 'distanceToRay')\r\n    }\r\n\r\n    let mouse_vector = mouseToThree(mouse_position)\r\n    this.raycaster.setFromCamera(mouse_vector, this.camera)\r\n    this.raycaster.params.Points.threshold = 0.5\r\n    let intersects = this.raycaster.intersectObjects(\r\n      this.scene.children[0].children\r\n    )\r\n    if (intersects[0]) {\r\n      let sorted_intersects = sortIntersectsByDistanceToRay(intersects)\r\n      let intersect = sorted_intersects[0]\r\n      let sprite_index = intersect.object.userData.sprite_index\r\n      let digit_index = intersect.index\r\n      let full_index = sprite_index * this.props.sprite_size + digit_index\r\n      this.props.setHoverIndex(full_index)\r\n      this.highlightPoint(sprite_index, digit_index, full_index)\r\n      this.scene.children[1].visible = true\r\n\r\n      sidebar_ctx.fillRect(0, 0, sidebar_image_size_width, sidebar_image_size_height)\r\n      sidebar_ctx.drawImage(\r\n        this._images[sprite_index],\r\n        // source rectangle\r\n        (digit_index % this.props.sprite_side_x) * this.props.sprite_image_width,\r\n        Math.floor(digit_index / this.props.sprite_side_x) * this.props.sprite_image_height,\r\n        this.props.sprite_image_width,\r\n        this.props.sprite_image_height,\r\n        // destination rectangle\r\n        0,\r\n        0,\r\n        sidebar_image_size_width,\r\n        sidebar_image_size_height\r\n      )\r\n    } else {\r\n      this.props.setHoverIndex(null)\r\n      this.scene.children[1].visible = false\r\n      sidebar_ctx.fillRect(0, 0, sidebar_image_size_width, sidebar_image_size_height)\r\n    }\r\n  }\r\n\r\n  handleMouse() {\r\n    let view = d3.select(this.renderer.domElement)\r\n\r\n    this.raycaster = new THREE.Raycaster()\r\n    view.on('mousemove', () => {\r\n      let [mouseX, mouseY] = d3.mouse(view.node())\r\n      let mouse_position = [mouseX, mouseY]\r\n      \r\n\r\n      this.checkIntersects(mouse_position)\r\n    })\r\n  }\r\n\r\n  init() {\r\n    let { width, height,sidebar_ctx } = this.props\r\n\r\n    this.scene = new THREE.Scene()\r\n\r\n    let vFOV = 75\r\n    let aspect = width / height\r\n    let near = 0.01\r\n    let far = 1000\r\n\r\n    this.camera = new THREE.PerspectiveCamera(vFOV, aspect, near, far)\r\n\r\n    this.renderer = new THREE.WebGLRenderer()\r\n    this.renderer.setClearColor(0x111111, 1)\r\n    this.renderer.setSize(width, height)\r\n    this.mount.appendChild(this.renderer.domElement)\r\n    \r\n\r\n    this.addPoints()\r\n\r\n    this.addBlankHighlightPoints()\r\n\r\n    this.setUpCamera()\r\n\r\n    this.animate()\r\n    \r\n    this.handleMouse()\r\n  }\r\n\r\n  animate() {\r\n    requestAnimationFrame(this.animate)\r\n    TWEEN.update()\r\n    this.renderer.render(this.scene, this.camera)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.init()\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { width, height } = this.props\r\n    if (width !== prevProps.width || height !== prevProps.height) {\r\n      this.handleResize(width, height)\r\n    }\r\n    if (prevProps.algorithm_choice !== this.props.algorithm_choice) {\r\n      this.changeEmbeddings(\r\n        prevProps.algorithm_choice,\r\n        this.props.algorithm_choice\r\n      )\r\n    }\r\n    if (prevProps.label_choice !== this.props.label_choice) {\r\n      this.changeLabels(\r\n        this.props.label_choice\r\n      )\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mount.removeChild(this.renderer.domElement)\r\n  }\r\n\r\n  render() {\r\n    let { width, height } = this.props\r\n    \r\n    return (\r\n      <div\r\n        style={{ width: width, height: height, overflow: 'hidden' }}\r\n        ref={mount => {\r\n          this.mount = mount\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Projection\r\n","import React, { Component } from 'react'\nimport Markdown from 'react-remarkable'\nimport { about_text } from './Content'\n\nclass About extends Component {\n  render() {\n    let { grem, p } = this.props\n    return (\n      <div\n        style={{\n          position: 'fixed',\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0,\n          background: '#222',\n          color: '#fff',\n          paddingTop: grem * 2,\n          overflowY: 'auto',\n          fontSize: 16,\n          lineHeight: 1.5,\n        }}\n      >\n        <div\n          style={{\n            background: '#333',\n            position: 'fixed',\n            left: 0,\n            top: 0,\n            right: 0,\n            padding: grem / 2,\n          }}\n        >\n          About\n          <button\n            onClick={() => {\n              this.props.toggleAbout(false)\n            }}\n            className=\"hover-555\"\n            style={{\n              position: 'absolute',\n              right: 0,\n              top: 0,\n              height: grem * 2,\n              width: grem * 2,\n              padding: grem / 2,\n              textAlign: 'center',\n              cursor: 'pointer',\n              textDecoration: 'none',\n            }}\n          >\n            &times;\n          </button>\n        </div>\n        <div\n          style={{\n            maxWidth: grem * 30,\n            margin: '0 auto',\n            padding: grem / 2,\n            color: '#fff',\n          }}\n        >\n          <Markdown>{about_text}</Markdown>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default About\n","export let about_text = `\n# About DIFFINSPECT\n\nThis website provides 2D visualizations of various latent spaces as presented in the work \"TBD\"; Alexander Fertig, Lakshman Balasubramanian, Michael Botsch; 2023. The visualization tool is an extension of [umap-explorer](https://github.com/GrantCuster/umap-explorer) and [SCENATLAS](https://jwthi.github.io/SCENATLAS/).\n`\n\nexport let imprint_text = `\n# Impressum\n\n## Angaben gem&auml;&szlig; &sect; 5 TMG\n   Alexander Fertig  \n   Esplanade 10  \n   85049 Ingolstadt  \n\n## Kontakt\n   Telefon: +49-841-9348-6615  \n   E-Mail: alexander.fertig@thi.de  \n\n### Haftung f&uuml;r Inhalte\nAls Diensteanbieter sind wir gem&auml;&szlig; &sect; 7 Abs.1 TMG f&uuml;r eigene Inhalte auf diesen Seiten nach den allgemeinen Gesetzen verantwortlich. Nach &sect;&sect; 8 bis 10 TMG sind wir als Diensteanbieter jedoch nicht verpflichtet, &uuml;bermittelte oder gespeicherte fremde Informationen zu &uuml;berwachen oder nach Umst&auml;nden zu forschen, die auf eine rechtswidrige T&auml;tigkeit hinweisen.  \nVerpflichtungen zur Entfernung oder Sperrung der Nutzung von Informationen nach den allgemeinen Gesetzen bleiben hiervon unber&uuml;hrt. Eine diesbez&uuml;gliche Haftung ist jedoch erst ab dem Zeitpunkt der Kenntnis einer konkreten Rechtsverletzung m&ouml;glich. Bei Bekanntwerden von entsprechenden Rechtsverletzungen werden wir diese Inhalte umgehend entfernen.  \n### Haftung f&uuml;r Links\nUnser Angebot enth&auml;lt Links zu externen Websites Dritter, auf deren Inhalte wir keinen Einfluss haben. Deshalb k&ouml;nnen wir f&uuml;r diese fremden Inhalte auch keine Gew&auml;hr &uuml;bernehmen. F&uuml;r die Inhalte der verlinkten Seiten ist stets der jeweilige Anbieter oder Betreiber der Seiten verantwortlich. Die verlinkten Seiten wurden zum Zeitpunkt der Verlinkung auf m&ouml;gliche Rechtsverst&ouml;&szlig;e &uuml;berpr&uuml;ft. Rechtswidrige Inhalte waren zum Zeitpunkt der Verlinkung nicht erkennbar.  \nEine permanente inhaltliche Kontrolle der verlinkten Seiten ist jedoch ohne konkrete Anhaltspunkte einer Rechtsverletzung nicht zumutbar. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Links umgehend entfernen.  \n### Urheberrecht  \nDie durch die Seitenbetreiber erstellten Inhalte und Werke auf diesen Seiten unterliegen dem deutschen Urheberrecht. Die Vervielf&auml;ltigung, Bearbeitung, Verbreitung und jede Art der Verwertung au&szlig;erhalb der Grenzen des Urheberrechtes bed&uuml;rfen der schriftlichen Zustimmung des jeweiligen Autors bzw. Erstellers. Downloads und Kopien dieser Seite sind nur f&uuml;r den privaten, nicht kommerziellen Gebrauch gestattet.  \nSoweit die Inhalte auf dieser Seite nicht vom Betreiber erstellt wurden, werden die Urheberrechte Dritter beachtet. Insbesondere werden Inhalte Dritter als solche gekennzeichnet. Sollten Sie trotzdem auf eine Urheberrechtsverletzung aufmerksam werden, bitten wir um einen entsprechenden Hinweis. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Inhalte umgehend entfernen.`\n\nexport let privacy_text = `\n# Datenschutz&shy;erkl&auml;rung\n## 1. Datenschutz auf einen Blick\n### Allgemeine Hinweise  \nDie folgenden Hinweise geben einen einfachen &Uuml;berblick dar&uuml;ber, was mit Ihren personenbezogenen Daten passiert, wenn Sie diese Website besuchen. Personenbezogene Daten sind alle Daten, mit denen Sie pers&ouml;nlich identifiziert werden k&ouml;nnen. Ausf&uuml;hrliche Informationen zum Thema Datenschutz entnehmen Sie unserer unter diesem Text aufgef&uuml;hrten Datenschutzerkl&auml;rung.  \n### Datenerfassung auf dieser Website+\n#### Wer ist verantwortlich f&uuml;r die Datenerfassung auf dieser Website?  \nDie Datenverarbeitung auf dieser Website erfolgt durch den Websitebetreiber. Dessen Kontaktdaten k&ouml;nnen Sie dem Abschnitt &bdquo;Hinweis zur Verantwortlichen Stelle&ldquo; in dieser Datenschutzerkl&auml;rung entnehmen.\n#### Wie erfassen wir Ihre Daten?  \nIhre Daten werden zum einen dadurch erhoben, dass Sie uns diese mitteilen. Hierbei kann es sich z.&nbsp;B. um Daten handeln, die Sie in ein Kontaktformular eingeben.  \nAndere Daten werden automatisch oder nach Ihrer Einwilligung beim Besuch der Website durch unsere IT-Systeme erfasst. Das sind vor allem technische Daten (z.&nbsp;B. Internetbrowser, Betriebssystem oder Uhrzeit des Seitenaufrufs). Die Erfassung dieser Daten erfolgt automatisch, sobald Sie diese Website betreten.  \n#### Wof&uuml;r nutzen wir Ihre Daten?  \nEin Teil der Daten wird erhoben, um eine fehlerfreie Bereitstellung der Website zu gew&auml;hrleisten. Andere Daten k&ouml;nnen zur Analyse Ihres Nutzerverhaltens verwendet werden.  \n#### Welche Rechte haben Sie bez&uuml;glich Ihrer Daten?  \nSie haben jederzeit das Recht, unentgeltlich Auskunft &uuml;ber Herkunft, Empf&auml;nger und Zweck Ihrer gespeicherten personenbezogenen Daten zu erhalten. Sie haben au&szlig;erdem ein Recht, die Berichtigung oder L&ouml;schung dieser Daten zu verlangen. Wenn Sie eine Einwilligung zur Datenverarbeitung erteilt haben, k&ouml;nnen Sie diese Einwilligung jederzeit f&uuml;r die Zukunft widerrufen. Au&szlig;erdem haben Sie das Recht, unter bestimmten Umst&auml;nden die Einschr&auml;nkung der Verarbeitung Ihrer personenbezogenen Daten zu verlangen. Des Weiteren steht Ihnen ein Beschwerderecht bei der zust&auml;ndigen Aufsichtsbeh&ouml;rde zu.  \nHierzu sowie zu weiteren Fragen zum Thema Datenschutz k&ouml;nnen Sie sich jederzeit an uns wenden.  \n## 2. Hosting und Content Delivery Networks (CDN)\n### Externes Hosting  \nDiese Website wird bei einem externen Dienstleister gehostet (Hoster). Die personenbezogenen Daten, die auf dieser Website erfasst werden, werden auf den Servern des Hosters gespeichert. Hierbei kann es sich v. a. um IP-Adressen, Kontaktanfragen, Meta- und Kommunikationsdaten, Vertragsdaten, Kontaktdaten, Namen, Websitezugriffe und sonstige Daten, die &uuml;ber eine Website generiert werden, handeln.  \nDer Einsatz des Hosters erfolgt zum Zwecke der Vertragserf&uuml;llung gegen&uuml;ber unseren potenziellen und bestehenden Kunden (Art. 6 Abs. 1 lit. b DSGVO) und im Interesse einer sicheren, schnellen und effizienten Bereitstellung unseres Online-Angebots durch einen professionellen Anbieter (Art. 6 Abs. 1 lit. f DSGVO).  \nUnser Hoster wird Ihre Daten nur insoweit verarbeiten, wie dies zur Erf&uuml;llung seiner Leistungspflichten erforderlich ist und unsere Weisungen in Bezug auf diese Daten befolgen.  \nWir setzen folgenden Hoster ein:  \nGitHub Inc.  \n88 Colin P Kelly Jr St  \nSan Francisco, CA 94107  \nUnited States  \n## 3. Allgemeine Hinweise und Pflicht&shy;informationen  \n### Datenschutz  \nDie Betreiber dieser Seiten nehmen den Schutz Ihrer pers&ouml;nlichen Daten sehr ernst. Wir behandeln Ihre personenbezogenen Daten vertraulich und entsprechend der gesetzlichen Datenschutzvorschriften sowie dieser Datenschutzerkl&auml;rung.  \nWenn Sie diese Website benutzen, werden verschiedene personenbezogene Daten erhoben. Personenbezogene Daten sind Daten, mit denen Sie pers&ouml;nlich identifiziert werden k&ouml;nnen. Die vorliegende Datenschutzerkl&auml;rung erl&auml;utert, welche Daten wir erheben und wof&uuml;r wir sie nutzen. Sie erl&auml;utert auch, wie und zu welchem Zweck das geschieht.  \nWir weisen darauf hin, dass die Daten&uuml;bertragung im Internet (z.&nbsp;B. bei der Kommunikation per E-Mail) Sicherheitsl&uuml;cken aufweisen kann. Ein l&uuml;ckenloser Schutz der Daten vor dem Zugriff durch Dritte ist nicht m&ouml;glich.  \n### Hinweis zur verantwortlichen Stelle  \nDie verantwortliche Stelle f&uuml;r die Datenverarbeitung auf dieser Website ist:  \nAlexander Fertig  \nTechnische Hoschule Ingolstadt  \nEsplanade 10  \n85049 Ingolstadt  \n\nTelefon: +49-841-9348-6615  \nE-Mail: alexander.fertig@thi.de  \nVerantwortliche Stelle ist die nat&uuml;rliche oder juristische Person, die allein oder gemeinsam mit anderen &uuml;ber die Zwecke und Mittel der Verarbeitung von personenbezogenen Daten (z.&nbsp;B. Namen, E-Mail-Adressen o. &Auml;.) entscheidet.  \n### Speicherdauer  \nSoweit innerhalb dieser Datenschutzerkl&auml;rung keine speziellere Speicherdauer genannt wurde, verbleiben Ihre personenbezogenen Daten bei uns, bis der Zweck f&uuml;r die Datenverarbeitung entf&auml;llt. Wenn Sie ein berechtigtes L&ouml;schersuchen geltend machen oder eine Einwilligung zur Datenverarbeitung widerrufen, werden Ihre Daten gel&ouml;scht, sofern wir keinen anderen rechtlich zul&auml;ssigen&nbsp; Gr&uuml;nde f&uuml;r die Speicherung Ihrer personenbezogenen Daten haben (z.B. steuer- oder handelsrechtliche Aufbewahrungsfristen); im letztgenannten Fall erfolgt die L&ouml;schung nach Fortfall dieser Gr&uuml;nde.  \n### Widerruf Ihrer Einwilligung zur Datenverarbeitung  \nViele Datenverarbeitungsvorg&auml;nge sind nur mit Ihrer ausdr&uuml;cklichen Einwilligung m&ouml;glich. Sie k&ouml;nnen eine bereits erteilte Einwilligung jederzeit widerrufen. Die Rechtm&auml;&szlig;igkeit der bis zum Widerruf erfolgten Datenverarbeitung bleibt vom Widerruf unber&uuml;hrt.  \n### Widerspruchsrecht gegen die Datenerhebung in besonderen F&auml;llen sowie gegen Direktwerbung (Art. 21 DSGVO)  \nWENN DIE DATENVERARBEITUNG AUF GRUNDLAGE VON ART. 6 ABS. 1 LIT. E ODER F DSGVO ERFOLGT, HABEN SIE JEDERZEIT DAS RECHT, AUS GR&Uuml;NDEN, DIE SICH AUS IHRER BESONDEREN SITUATION ERGEBEN, GEGEN DIE VERARBEITUNG IHRER PERSONENBEZOGENEN DATEN WIDERSPRUCH EINZULEGEN; DIES GILT AUCH F&Uuml;R EIN AUF DIESE BESTIMMUNGEN GEST&Uuml;TZTES PROFILING. DIE JEWEILIGE RECHTSGRUNDLAGE, AUF DENEN EINE VERARBEITUNG BERUHT, ENTNEHMEN SIE DIESER DATENSCHUTZERKL&Auml;RUNG. WENN SIE WIDERSPRUCH EINLEGEN, WERDEN WIR IHRE BETROFFENEN PERSONENBEZOGENEN DATEN NICHT MEHR VERARBEITEN, ES SEI DENN, WIR K&Ouml;NNEN ZWINGENDE SCHUTZW&Uuml;RDIGE GR&Uuml;NDE F&Uuml;R DIE VERARBEITUNG NACHWEISEN, DIE IHRE INTERESSEN, RECHTE UND FREIHEITEN &Uuml;BERWIEGEN ODER DIE VERARBEITUNG DIENT DER GELTENDMACHUNG, AUS&Uuml;BUNG ODER VERTEIDIGUNG VON RECHTSANSPR&Uuml;CHEN (WIDERSPRUCH NACH ART. 21 ABS. 1 DSGVO).  \nWERDEN IHRE PERSONENBEZOGENEN DATEN VERARBEITET, UM DIREKTWERBUNG ZU BETREIBEN, SO HABEN SIE DAS RECHT, JEDERZEIT WIDERSPRUCH GEGEN DIE VERARBEITUNG SIE BETREFFENDER PERSONENBEZOGENER DATEN ZUM ZWECKE DERARTIGER WERBUNG EINZULEGEN; DIES GILT AUCH F&Uuml;R DAS PROFILING, SOWEIT ES MIT SOLCHER DIREKTWERBUNG IN VERBINDUNG STEHT. WENN SIE WIDERSPRECHEN, WERDEN IHRE PERSONENBEZOGENEN DATEN ANSCHLIESSEND NICHT MEHR ZUM ZWECKE DER DIREKTWERBUNG VERWENDET (WIDERSPRUCH NACH ART. 21 ABS. 2 DSGVO).  \n### Beschwerde&shy;recht bei der zust&auml;ndigen Aufsichts&shy;beh&ouml;rde  \nIm Falle von Verst&ouml;&szlig;en gegen die DSGVO steht den Betroffenen ein Beschwerderecht bei einer Aufsichtsbeh&ouml;rde, insbesondere in dem Mitgliedstaat ihres gew&ouml;hnlichen Aufenthalts, ihres Arbeitsplatzes oder des Orts des mutma&szlig;lichen Versto&szlig;es zu. Das Beschwerderecht besteht unbeschadet anderweitiger verwaltungsrechtlicher oder gerichtlicher Rechtsbehelfe.\n### Recht auf Daten&shy;&uuml;bertrag&shy;barkeit  \nSie haben das Recht, Daten, die wir auf Grundlage Ihrer Einwilligung oder in Erf&uuml;llung eines Vertrags automatisiert verarbeiten, an sich oder an einen Dritten in einem g&auml;ngigen, maschinenlesbaren Format aush&auml;ndigen zu lassen. Sofern Sie die direkte &Uuml;bertragung der Daten an einen anderen Verantwortlichen verlangen, erfolgt dies nur, soweit es technisch machbar ist.  \n### Auskunft, L&ouml;schung und Berichtigung  \nSie haben im Rahmen der geltenden gesetzlichen Bestimmungen jederzeit das Recht auf unentgeltliche Auskunft &uuml;ber Ihre gespeicherten personenbezogenen Daten, deren Herkunft und Empf&auml;nger und den Zweck der Datenverarbeitung und ggf. ein Recht auf Berichtigung oder L&ouml;schung dieser Daten. Hierzu sowie zu weiteren Fragen zum Thema personenbezogene Daten k&ouml;nnen Sie sich jederzeit an uns wenden.  \n### Recht auf Einschr&auml;nkung der Verarbeitung  \nSie haben das Recht, die Einschr&auml;nkung der Verarbeitung Ihrer personenbezogenen Daten zu verlangen. Hierzu k&ouml;nnen Sie sich jederzeit an uns wenden. Das Recht auf Einschr&auml;nkung der Verarbeitung besteht in folgenden F&auml;llen:\n- Wenn Sie die Richtigkeit Ihrer bei uns gespeicherten personenbezogenen Daten bestreiten, ben&ouml;tigen wir in der Regel Zeit, um dies zu &uuml;berpr&uuml;fen. F&uuml;r die Dauer der Pr&uuml;fung haben Sie das Recht, die Einschr&auml;nkung der Verarbeitung Ihrer personenbezogenen Daten zu verlangen.  \n- Wenn die Verarbeitung Ihrer personenbezogenen Daten unrechtm&auml;&szlig;ig geschah/geschieht, k&ouml;nnen Sie statt der L&ouml;schung die Einschr&auml;nkung der Datenverarbeitung verlangen.  \n- Wenn wir Ihre personenbezogenen Daten nicht mehr ben&ouml;tigen, Sie sie jedoch zur Aus&uuml;bung, Verteidigung oder Geltendmachung von Rechtsanspr&uuml;chen ben&ouml;tigen, haben Sie das Recht, statt der L&ouml;schung die Einschr&auml;nkung der Verarbeitung Ihrer personenbezogenen Daten zu verlangen.  \n- Wenn Sie einen Widerspruch nach Art. 21 Abs. 1 DSGVO eingelegt haben, muss eine Abw&auml;gung zwischen Ihren und unseren Interessen vorgenommen werden. Solange noch nicht feststeht, wessen Interessen &uuml;berwiegen, haben Sie das Recht, die Einschr&auml;nkung der Verarbeitung Ihrer personenbezogenen Daten zu verlangen.  \nWenn Sie die Verarbeitung Ihrer personenbezogenen Daten eingeschr&auml;nkt haben, d&uuml;rfen diese Daten &ndash; von ihrer Speicherung abgesehen &ndash; nur mit Ihrer Einwilligung oder zur Geltendmachung, Aus&uuml;bung oder Verteidigung von Rechtsanspr&uuml;chen oder zum Schutz der Rechte einer anderen nat&uuml;rlichen oder juristischen Person oder aus Gr&uuml;nden eines wichtigen &ouml;ffentlichen Interesses der Europ&auml;ischen Union oder eines Mitgliedstaats verarbeitet werden.`","import React, { Component } from 'react'\nimport Markdown from 'react-remarkable'\nimport { imprint_text } from './Content'\n\nclass Imprint extends Component {\n  render() {\n    let { grem, p } = this.props\n    return (\n      <div\n        style={{\n          position: 'fixed',\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0,\n          background: '#222',\n          color: '#fff',\n          paddingTop: grem * 2,\n          overflowY: 'auto',\n          fontSize: 16,\n          lineHeight: 1.5,\n        }}\n      >\n        <div\n          style={{\n            background: '#333',\n            position: 'fixed',\n            left: 0,\n            top: 0,\n            right: 0,\n            padding: grem / 2,\n          }}\n        >\n          Imprint\n          <button\n            onClick={() => {\n              this.props.toggleImprint(false)\n            }}\n            className=\"hover-555\"\n            style={{\n              position: 'absolute',\n              right: 0,\n              top: 0,\n              height: grem * 2,\n              width: grem * 2,\n              padding: grem / 2,\n              textAlign: 'center',\n              cursor: 'pointer',\n              textDecoration: 'none',\n            }}\n          >\n            &times;\n          </button>\n        </div>\n        <div\n          style={{\n            maxWidth: grem * 30,\n            margin: '0 auto',\n            padding: grem / 2,\n            color: '#fff',\n          }}\n        >\n          <Markdown>{imprint_text}</Markdown>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Imprint\n","import React, { Component } from 'react'\nimport Markdown from 'react-remarkable'\nimport { privacy_text } from './Content'\n\nclass Privacy extends Component {\n  render() {\n    let { grem, p } = this.props\n    return (\n      <div\n        style={{\n          position: 'fixed',\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0,\n          background: '#222',\n          color: '#fff',\n          paddingTop: grem * 2,\n          overflowY: 'auto',\n          fontSize: 16,\n          lineHeight: 1.5,\n        }}\n      >\n        <div\n          style={{\n            background: '#333',\n            position: 'fixed',\n            left: 0,\n            top: 0,\n            right: 0,\n            padding: grem / 2,\n          }}\n        >\n          Privacy\n          <button\n            onClick={() => {\n              this.props.togglePrivacy(false)\n            }}\n            className=\"hover-555\"\n            style={{\n              position: 'absolute',\n              right: 0,\n              top: 0,\n              height: grem * 2,\n              width: grem * 2,\n              padding: grem / 2,\n              textAlign: 'center',\n              cursor: 'pointer',\n              textDecoration: 'none',\n            }}\n          >\n            &times;\n          </button>\n        </div>\n        <div\n          style={{\n            maxWidth: grem * 30,\n            margin: '0 auto',\n            padding: grem / 2,\n            color: '#fff',\n          }}\n        >\n          <Markdown>{privacy_text}</Markdown>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Privacy\n","import React, { Component } from 'react'\r\nimport Sidebar from './Sidebar'\r\nimport Projection from './Projection'\r\nimport About from './About'\r\nimport Imprint from './Imprint'\r\nimport Privacy from './Privacy'\r\nimport * as _ from 'lodash'\r\n\r\n// padding constructor\r\nfunction p(tb, lr) {\r\n  return `${tb}px ${lr}px`\r\n}\r\n\r\nclass Layout extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      ww: null,\r\n      wh: null,\r\n      sidebar_height: null,\r\n      hover_index: null,\r\n      show_about: null,\r\n      show_imprint: null,\r\n      show_privacy: null,\r\n      algorithm_choice: 0,\r\n      label_choice: 0,\r\n      color_description_choice: 0,\r\n    }\r\n    this.sidebar_ctx = null\r\n    this.setSize = _.debounce(this.setSize.bind(this), 200)\r\n    this.checkHash = this.checkHash.bind(this)\r\n    this.setSidebarCanvas = this.setSidebarCanvas.bind(this)\r\n    this.toggleAbout = this.toggleAbout.bind(this)\r\n    this.toggleImprint = this.toggleImprint.bind(this)\r\n    this.togglePrivacy = this.togglePrivacy.bind(this)\r\n    this.selectAlgorithm = this.selectAlgorithm.bind(this)\r\n    this.selectLabel = this.selectLabel.bind(this)\r\n    this.selectColorDescription = this.selectColorDescription(this)\r\n  }\r\n\r\n  selectAlgorithm(v) {\r\n    let i = this.props.algorithm_options.indexOf(v)\r\n    this.setState({ algorithm_choice: i })\r\n    // TODO so the labels get updated with new embeddings\r\n    // this.setState({ label_choice: i })\r\n  }\r\n  selectLabel(v) {\r\n    let i = this.props.label_options.indexOf(v)\r\n    this.setState({ label_choice: i })\r\n  }\r\n  selectColorDescription(v) {\r\n    let i = this.props.label_options.indexOf(v)\r\n    this.setState({ color_description_choice: i })\r\n  }\r\n\r\n  setSize() {\r\n    this.setState({ ww: window.innerWidth, wh: window.innerHeight })\r\n    let sidebar_height = this.sidebar_mount.offsetHeight\r\n    this.setState({ sidebar_height: sidebar_height })\r\n    if (this.sidebar_ctx) this.sidebar_ctx.imageSmoothingEnabled = false\r\n  }\r\n\r\n  setSidebarCanvas(canvas) {\r\n    let ctx = canvas.getContext('2d')\r\n    ctx.imageSmoothingEnabled = false\r\n    this.sidebar_ctx = ctx\r\n  }\r\n\r\n\r\n  toggleAbout(state) {\r\n    if (state === true) {\r\n      window.history.pushState(null, 'About', '#about')\r\n      this.setState({ show_about: true })\r\n    } else if (state === false) {\r\n      window.history.pushState(null, ' ', window.location.pathname)\r\n      this.setState({ show_about: false })\r\n    }\r\n  }\r\n\r\n  toggleImprint(state) {\r\n    if (state === true) {\r\n      window.history.pushState(null, 'Imprint', '#impressum')\r\n      this.setState({ show_imprint: true })\r\n    } else if (state === false) {\r\n      window.history.pushState(null, ' ', window.location.pathname)\r\n      this.setState({ show_imprint: false })\r\n    }\r\n  }\r\n\r\n  togglePrivacy(state) {\r\n    if (state === true) {\r\n      window.history.pushState(null, 'Privacy', '#datenschutzerklaerung')\r\n      this.setState({ show_privacy: true })\r\n    } else if (state === false) {\r\n      window.history.pushState(null, ' ', window.location.pathname)\r\n      this.setState({ show_privacy: false })\r\n    }\r\n  }\r\n\r\n  setHoverIndex(hover_index) {\r\n    this.setState({ hover_index: hover_index })\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setSize()\r\n    this.checkHash()\r\n  }\r\n\r\n  checkHash() {\r\n    if (window.location.hash && window.location.hash === '#about') {\r\n      this.setState({ show_about: true })\r\n    } else {\r\n      this.setState({ show_about: false })\r\n    }\r\n\r\n    if (window.location.hash && window.location.hash === '#datenschutzerklaerung') {\r\n      this.setState({ show_privacy: true })\r\n    } else {\r\n      this.setState({ show_privacy: false })\r\n    }\r\n\r\n    if (window.location.hash && window.location.hash === '#impressum') {\r\n      this.setState({ show_imprint: true })\r\n    } else {\r\n      this.setState({ show_imprint: false })\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.setSize)\r\n    window.addEventListener('popstate', this.checkHash)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.setSize)\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      embeddings,\r\n      embedding_stack,\r\n      labels,\r\n      label_stack,\r\n      algorithm_options,\r\n      label_options,\r\n      color_array,\r\n      color_array_stack,\r\n      colored_images,\r\n      description,\r\n      description_stack,\r\n      sprite_side,\r\n      sprite_side_x,\r\n      sprite_side_y,\r\n      sprite_size,\r\n      sprite_number,\r\n      sprite_image_size,\r\n      sprite_image_width,\r\n      sprite_image_height,\r\n      sprite_actual_size,\r\n      sprite_ratio,\r\n      zoom_min,\r\n      zoom_mid,\r\n      zoom_max,\r\n      hoover_size,\r\n    } = this.props\r\n    let {\r\n      ww,\r\n      wh,\r\n      sidebar_height,\r\n      hover_index,\r\n      show_about,\r\n      show_imprint,\r\n      show_privacy,\r\n      algorithm_choice,\r\n      label_choice,\r\n      color_description_choice,\r\n    } = this.state\r\n    let sidebar_ctx = this.sidebar_ctx\r\n\r\n\r\n    let line_height = 1.5\r\n\r\n    let sidebar_style = {\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      height: '100vh',\r\n      overflow: 'auto',\r\n      background: '#222',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    }\r\n    let main_style = {\r\n      position: 'relative',\r\n      height: '100vh',\r\n      background: '#111',\r\n      overflow: 'hidden',\r\n    }\r\n\r\n    let sidebar_image_size_width, sidebar_image_size_height, sidebar_orientation\r\n    let font_size = 16\r\n    if (ww < 800) {\r\n      font_size = 14\r\n      sidebar_style = {\r\n        ...sidebar_style,\r\n        flexDirection: 'row',\r\n        width: '100%',\r\n        top: 'auto',\r\n        height: 'auto',\r\n        bottom: 0,\r\n      }\r\n      main_style = { width: ww, height: wh - sidebar_height }\r\n      sidebar_image_size_height = font_size * line_height * 3\r\n      sidebar_image_size_width = sidebar_image_size_height * this.props.sprite_ratio\r\n      sidebar_orientation = 'horizontal'\r\n    } else if (ww < 800 + 600) {\r\n      let scaler = 200 + (300 - 200) * ((ww - 800) / 600)\r\n      font_size = 14 + 2 * ((ww - 800) / 600)\r\n      sidebar_style = {\r\n        ...sidebar_style,\r\n        width: scaler,\r\n      }\r\n      sidebar_image_size_width = sidebar_style.width\r\n      sidebar_image_size_height = sidebar_image_size_width / this.props.sprite_ratio\r\n      main_style = {\r\n        ...main_style,\r\n        width: ww - scaler,\r\n        left: scaler,\r\n        height: wh,\r\n      }\r\n      sidebar_orientation = 'vertical'\r\n    } else {\r\n      sidebar_style = {\r\n        ...sidebar_style,\r\n        width: 300,\r\n      }\r\n      main_style = {\r\n        ...main_style,\r\n        width: ww - 300,\r\n        left: 300,\r\n        height: wh,\r\n      }\r\n      sidebar_image_size_width = sidebar_style.width\r\n      sidebar_image_size_height = sidebar_image_size_width / this.props.sprite_ratio\r\n      sidebar_orientation = 'vertical'\r\n    }\r\n\r\n    let grem = font_size * line_height\r\n\r\n    let general_style = {\r\n      fontSize: font_size,\r\n      lineHeight: line_height,\r\n    }\r\n\r\n    return ww !== null ? (\r\n      <div style={general_style}>\r\n        <div\r\n          style={sidebar_style}\r\n          ref={sidebar_mount => {\r\n            this.sidebar_mount = sidebar_mount\r\n          }}\r\n        >\r\n          <Sidebar\r\n            sidebar_orientation={sidebar_orientation}\r\n            sidebar_image_size_width={sidebar_image_size_width}\r\n            sidebar_image_size_height={sidebar_image_size_height}\r\n            grem={grem}\r\n            p={p}\r\n            color_array={color_array}\r\n            color_array_stack={color_array_stack}\r\n            colored_images={colored_images}\r\n            description = {description}\r\n            description_stack = {description_stack}\r\n            setSidebarCanvas={this.setSidebarCanvas}\r\n            hover_index={hover_index}\r\n            labels={labels}\r\n            label_stack={label_stack}\r\n            toggleAbout={this.toggleAbout}\r\n            togglePrivacy={this.togglePrivacy}\r\n            toggleImprint={this.toggleImprint}\r\n            algorithm_options={algorithm_options}\r\n            algorithm_choice={algorithm_choice}\r\n            selectAlgorithm={this.selectAlgorithm}\r\n            label_options={label_options}\r\n            label_choice={label_choice}\r\n            selectLabel={this.selectLabel}\r\n            color_description_choice={color_description_choice}\r\n            selectColorDescription={this.selectColorDescription}\r\n          />\r\n        </div>\r\n        <div style={main_style}>\r\n          <Projection\r\n            width={main_style.width}\r\n            height={main_style.height}\r\n            embeddings={embeddings}\r\n            embedding_stack = {embedding_stack}\r\n            sprite_side= {sprite_side}\r\n            sprite_side_x= {sprite_side_x}\r\n            sprite_side_y= {sprite_side_y}\r\n            sprite_size= {sprite_size}\r\n            sprite_number= {sprite_number}\r\n            sprite_image_size= {sprite_image_size}\r\n            sprite_image_width= {sprite_image_width}\r\n            sprite_image_height= {sprite_image_height}\r\n            sprite_actual_size= {sprite_actual_size}\r\n            sprite_ratio = {sprite_ratio}\r\n            zoom_min = {zoom_min}\r\n            zoom_mid = {zoom_mid}\r\n            zoom_max = {zoom_max}\r\n            hoover_size = {hoover_size}\r\n            labels={labels}\r\n            label_stack={label_stack}\r\n            color_array={color_array}\r\n            color_array_stack={color_array_stack}\r\n            colored_images={colored_images}\r\n            description={description}\r\n            description_stack={description_stack}\r\n            sidebar_ctx={sidebar_ctx}\r\n            sidebar_image_size_width={sidebar_image_size_width}\r\n            sidebar_image_size_height={sidebar_image_size_height}\r\n            setHoverIndex={this.setHoverIndex.bind(this)}\r\n            algorithm_choice={algorithm_choice}\r\n            label_choice={label_choice}\r\n            color_description_choice={color_description_choice}\r\n          />\r\n        </div>\r\n        {show_about ? (\r\n          <About grem={grem} p={p} toggleAbout={this.toggleAbout} />\r\n        ) : null}\r\n        {show_imprint ? (\r\n          <Imprint grem={grem} p={p} toggleImprint={this.toggleImprint} />\r\n        ) : null}\r\n        {show_privacy ? (\r\n          <Privacy grem={grem} p={p} togglePrivacy={this.togglePrivacy} />\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <div style={{ padding: '1rem' }}>Loading layout...</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout\r\n","import React, { Component } from 'react'\r\nimport Layout from './Layout'\r\nimport * as _ from 'lodash'\r\nimport * as d3 from 'd3'\r\nimport { json } from 'd3'\r\n\r\nlet embedding_string = 'embeddings_'\r\nlet label_string = 'labels_'\r\nlet color_array_string = 'color_array_'\r\nlet description_string = 'description_'\r\n\r\nfunction getJson(){\r\n  return fetch(`${process.env.PUBLIC_URL}/set_up.json`)\r\n  .then((res) => res.json())\r\n  .then((json) => json)\r\n};\r\n\r\nasync function loadParams(){\r\n  let jsondata\r\n  await getJson().then((temp) =>{\r\n    jsondata = temp\r\n  })\r\n  let object_return = new Object()\r\n  object_return.sprite_side       = jsondata.sprite_side\r\n  object_return.sprite_side_x     = jsondata.sprite_side_x\r\n  object_return.sprite_side_y     = jsondata.sprite_side_y\r\n  object_return.sprite_size       = object_return.sprite_side_x * object_return.sprite_side_y\r\n  object_return.sprite_number     = jsondata.sprite_number\r\n  object_return.sprite_image_size = jsondata.sprite_image_size\r\n  object_return.sprite_image_width= jsondata.sprite_image_width\r\n  object_return.sprite_image_height= jsondata.sprite_image_height\r\n  object_return.sprite_ratio      = object_return.sprite_image_width / object_return.sprite_image_height\r\n  object_return.sprite_actual_size= jsondata.sprite_actual_size\r\n  object_return.algorithm_options = jsondata.embedding_names\r\n  object_return.label_options     = jsondata.label_names\r\n  object_return.embedding_number  = jsondata.embedding_number\r\n  object_return.label_number      = jsondata.label_number\r\n  object_return.colored_images    = jsondata.colored_images\r\n  object_return.zoom_min          = jsondata.zoom_min\r\n  object_return.zoom_mid          = jsondata.zoom_mid\r\n  object_return.zoom_max          = jsondata.zoom_max\r\n  object_return.hoover_size       = jsondata.hoover_size\r\n  return object_return\r\n}\r\n\r\nclass Data extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      sprite_side:null,\r\n      sprite_side_x:null,\r\n      sprite_side_y:null,\r\n      sprite_size: null,\r\n      sprite_number:null,\r\n      sprite_image_size:null,\r\n      sprite_image_width:null,\r\n      sprite_image_height:null,\r\n      sprite_actual_size:null,\r\n      sprite_ratio:null,\r\n      algorithm_options: null,\r\n      label_options:null,\r\n      embedding_number: null,\r\n      label_number:null,\r\n      color_array:null,\r\n      color_array_stack: [],\r\n      description:null,\r\n      description_stack: [],\r\n      embeddings: null,\r\n      embedding_stack: [],\r\n      labels: null,\r\n      label_stack: [],\r\n      colored_images: null,\r\n      zoom_min: null,\r\n      zoom_mid: null,\r\n      zoom_max: null,\r\n      hoover_size: null,\r\n    }\r\n  }\r\n\r\n  scaleEmbeddings(embeddings) {\r\n    let xs = embeddings.map(e => Math.abs(e[0]))\r\n    let ys = embeddings.map(e => Math.abs(e[1]))\r\n    let max_x = _.max(xs)\r\n    let max_y = _.max(ys)\r\n    let max = Math.max(max_x, max_y)\r\n    let scale = d3\r\n      .scaleLinear()\r\n      .domain([-max, max])\r\n      .range([-20, 20])\r\n    let scaled_embeddings = embeddings.map(e => [scale(e[0]), scale(e[1])])\r\n    return scaled_embeddings\r\n  }\r\n\r\n  componentDidMount() {\r\n    Promise.resolve(loadParams()).then((object_return_val)=>{\r\n      this.setState({\r\n        sprite_side: object_return_val.sprite_side,\r\n        sprite_side_x: object_return_val.sprite_side_x,\r\n        sprite_side_y: object_return_val.sprite_side_y,\r\n        sprite_size: object_return_val.sprite_size,\r\n        sprite_number: object_return_val.sprite_number,\r\n        sprite_image_size: object_return_val.sprite_image_size,\r\n        sprite_image_width: object_return_val.sprite_image_width,\r\n        sprite_image_height: object_return_val.sprite_image_height,\r\n        sprite_actual_size: object_return_val.sprite_actual_size,\r\n        embedding_number: object_return_val.embedding_number,\r\n        label_number: object_return_val.label_number,\r\n        algorithm_options: new Array(object_return_val.embedding_number),\r\n        label_options: new Array(object_return_val.label_number),\r\n        label_stack: new Array(object_return_val.label_number),\r\n        color_array_stack: new Array(object_return_val.label_number),\r\n        description_stack: new Array(object_return_val.label_number),\r\n        embedding_stack: new Array(object_return_val.embedding_number),\r\n        sprite_ratio: object_return_val.sprite_ratio ,\r\n        colored_images: object_return_val.colored_images,\r\n        zoom_min: object_return_val.zoom_min,\r\n        zoom_mid: object_return_val.zoom_mid,\r\n        zoom_max: object_return_val.zoom_max,\r\n        hoover_size: object_return_val.hoover_size,\r\n      })\r\n      // EMBEDDINGS\r\n      if (this.state.embedding_number > 1){\r\n        fetch(`${process.env.PUBLIC_URL}/${embedding_string}0.json`)\r\n        .then(response => response.json())\r\n        .then(jsondata => {\r\n          let scaled_embeddings = this.scaleEmbeddings(jsondata.points)\r\n          let embedding_stack_local =  this.state.embedding_stack.slice()\r\n          let algorithm_options_local =  this.state.algorithm_options.slice()\r\n          embedding_stack_local[0] = scaled_embeddings\r\n          algorithm_options_local[0] = '0__'+jsondata.name\r\n          this.setState({\r\n            embeddings: scaled_embeddings,\r\n            embedding_stack: embedding_stack_local,\r\n            algorithm_options: algorithm_options_local\r\n          })\r\n        })\r\n        for(let i=1;i<this.state.embedding_number; i++){\r\n          fetch(`${process.env.PUBLIC_URL}/${embedding_string}${i}.json`)\r\n          .then(response => response.json())\r\n          .then(jsondata => {\r\n            let scaled_embeddings = this.scaleEmbeddings(jsondata.points)\r\n            let embedding_stack_local =  this.state.embedding_stack.slice()\r\n            let algorithm_options_local =  this.state.algorithm_options.slice()\r\n            embedding_stack_local[i] = scaled_embeddings\r\n            algorithm_options_local[i] = String(i)+'__'+jsondata.name\r\n            this.setState({\r\n              embeddings: scaled_embeddings,\r\n              embedding_stack: embedding_stack_local,\r\n              algorithm_options: algorithm_options_local\r\n            })\r\n          })\r\n        }\r\n        // LABEL\r\n        fetch(`${process.env.PUBLIC_URL}/${label_string}0.json`)\r\n          .then(response => response.json())\r\n          .then(labels => {\r\n            let label_stack_local = this.state.label_stack.slice()\r\n            label_stack_local[0] = labels\r\n            this.setState({\r\n              labels: labels,\r\n              label_stack: label_stack_local\r\n            })\r\n          })\r\n        for (let i = 1; i < this.state.embedding_number; i++) {\r\n          fetch(`${process.env.PUBLIC_URL}/${label_string}${i}.json`)\r\n            .then(response => response.json())\r\n            .then(labels => {\r\n              let label_stack_local = this.state.label_stack.slice()\r\n              label_stack_local[i] = labels\r\n              this.setState({\r\n                label_stack: label_stack_local\r\n              })\r\n            })\r\n        }\r\n      }\r\n      else{\r\n        fetch(`${process.env.PUBLIC_URL}/${embedding_string}0.json`)\r\n        .then(response => response.json())\r\n        .then(jsondata => {\r\n          let scaled_embeddings = this.scaleEmbeddings(jsondata.points)\r\n          let embedding_stack_local =  this.state.embedding_stack.slice()\r\n          let algorithm_options_local =  this.state.algorithm_options.slice()\r\n          embedding_stack_local[0] = scaled_embeddings\r\n          algorithm_options_local[0] = '0__'+jsondata.name\r\n          this.setState({\r\n            embeddings: scaled_embeddings,\r\n            embedding_stack: embedding_stack_local,\r\n            algorithm_options: algorithm_options_local\r\n          })\r\n        })\r\n        // LABEL\r\n        fetch(`${process.env.PUBLIC_URL}/${label_string}0.json`)\r\n          .then(response => response.json())\r\n          .then(labels => {\r\n            let label_stack_local = this.state.label_stack.slice()\r\n            label_stack_local[0] = labels\r\n            this.setState({\r\n              labels: labels,\r\n              label_stack: label_stack_local\r\n            })\r\n          })\r\n\r\n      }\r\n      // LABELS AND COLORMAP AND DESCRIPTION\r\n      if (this.state.label_number > 1){\r\n        // // LABEL\r\n        // fetch(`${process.env.PUBLIC_URL}/${label_string}0.json`)\r\n        // .then(response => response.json())\r\n        // .then(labels => {\r\n        //   let label_stack_local =  this.state.label_stack.slice()\r\n        //   label_stack_local[0] = labels\r\n        //   this.setState({\r\n        //     labels: labels,\r\n        //     label_stack: label_stack_local\r\n        //   })\r\n        // })\r\n        // for(let i=1;i<this.state.embedding_number; i++){\r\n        //   fetch(`${process.env.PUBLIC_URL}/${label_string}${i}.json`)\r\n        //   .then(response => response.json())\r\n        //   .then(labels => {\r\n        //     let label_stack_local =  this.state.label_stack.slice()\r\n        //     label_stack_local[i] = labels\r\n        //     this.setState({\r\n        //       label_stack: label_stack_local\r\n        //     })\r\n        //   })\r\n        // }\r\n        // COLOR\r\n        fetch(`${process.env.PUBLIC_URL}/${color_array_string}0.json`)\r\n        .then(response => response.json())\r\n        .then(color => {\r\n          let color_array_stack_local =  this.state.color_array_stack.slice()\r\n          color_array_stack_local[0] = color\r\n          this.setState({\r\n            color_array: color,\r\n            color_array_stack: color_array_stack_local\r\n          })\r\n        })\r\n        for(let i=1;i<this.state.label_number; i++){\r\n          fetch(`${process.env.PUBLIC_URL}/${color_array_string}${i}.json`)\r\n          .then(response => response.json())\r\n          .then(color => {\r\n            let color_array_stack_local =  this.state.color_array_stack.slice()\r\n            color_array_stack_local[i] = color\r\n            this.setState({\r\n              color_array_stack: color_array_stack_local\r\n            })\r\n          })\r\n        }\r\n        // DESCRIPTION\r\n        fetch(`${process.env.PUBLIC_URL}/${description_string}0.json`)\r\n        .then(response => response.json())\r\n        .then(description => {\r\n          let description_stack_local =  this.state.description_stack.slice()\r\n          description_stack_local[0] = description\r\n          let label_options_local =  this.state.label_options.slice()\r\n          label_options_local[0] = description.name\r\n          this.setState({\r\n            description: description,\r\n            description_stack: description_stack_local,\r\n            label_options: label_options_local\r\n          })\r\n        })\r\n        for(let i=1;i<this.state.label_number; i++){\r\n          fetch(`${process.env.PUBLIC_URL}/${description_string}${i}.json`)\r\n          .then(response => response.json())\r\n          .then(description => {\r\n            let description_stack_local =  this.state.description_stack.slice()\r\n            description_stack_local[i] = description\r\n            let label_options_local =  this.state.label_options.slice()\r\n            label_options_local[i] = description.name\r\n            this.setState({\r\n              description_stack: description_stack_local,\r\n              label_options: label_options_local\r\n            })\r\n          })\r\n        }\r\n      }\r\n      else{\r\n        // // LABEL\r\n        // fetch(`${process.env.PUBLIC_URL}/${label_string}0.json`)\r\n        // .then(response => response.json())\r\n        // .then(labels => {\r\n        //   let label_stack_local =  this.state.label_stack.slice()\r\n        //   label_stack_local[0] = labels\r\n        //   this.setState({\r\n        //     labels: labels,\r\n        //     label_stack: label_stack_local\r\n        //   })\r\n        // })\r\n        // COLOR\r\n        fetch(`${process.env.PUBLIC_URL}/${color_array_string}0.json`)\r\n        .then(response => response.json())\r\n        .then(color => {\r\n          let color_array_stack_local =  this.state.color_array_stack.slice()\r\n          color_array_stack_local[0] = color\r\n          this.setState({\r\n            color_array: color,\r\n            color_array_stack: color_array_stack_local\r\n          })\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state)\r\n    return this.state.embeddings && this.state.labels ? (\r\n      <Layout\r\n        {...this.state}\r\n      />\r\n    ) : (\r\n      <div style={{ padding: '1rem' }}>Loading data...</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Data\r\n","import React, { Component } from 'react'\nimport './App.css'\nimport Data from './Data'\n\nclass App extends Component {\n  render() {\n    return <Data />\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}